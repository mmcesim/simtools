% \iffalse
%<package>\NeedsTeXFormat{LaTeX2e}
%<package>\ProvidesPackage{simtools}[2022/09/18 Simulation Report Tools Package]
%<*driver>
\documentclass{ltxdoc}
\usepackage{simtools}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
    \DocInput{simtools.dtx}
\end{document}
%</driver>
% \fi
% \newcommand\simtoolsdate{2022/09/18}
% \newcommand\simtoolsversion{1.0}
% \title{\texttt{simtools} Package Documentation\thanks{The file has version number \simtoolsversion{}, last revised \simtoolsdate{}.}}
% \author{Wuqiong Zhao (Teddy van Jerry)}
% \date{\simtoolsdate{}}
% \maketitle
% \begin{abstract}
% This package provides utilities for simulation reports,
% including data array, Ti\textit{k}Z/pgf plotting, table generation from raw data.
% This can be especially useful for automatic report generation from a simulation software
% that hopes for an elegant solution of \LaTeX{} report.
% \end{abstract}
% \section{Introduction}
% This package is for simulation report generation.
% With raw simulation data, you can easily generate elegant Ti\textit{k}Z/pgf plotting
% as well as data tables.
%
% The package is initially part of \href{https://mmcesim.org}{mmCEsim} project
% where it is used to generate simulation report in \LaTeX{} format.
% I hope that this package may also be useful to other researchers.
% The package can be freely used and distributed which is open source at
% \url{https://github.com/mmcesim/simtools} under the MIT License.
%
% \section{Data Array}
% \texttt{simtools} package provides user-friendly array access.
% The implementation is taken from \href{https://tex.stackexchange.com/a/215571/234654}{TEX.SX}
% written by \textbf{@egreg}.
%
% \section{The Code}
%    \begin{macrocode}
\RequirePackage{xparse}
%    \end{macrocode}
% The following \verb|\storedata| and \verb|\getdata|, etc.
% code related to data array operations are all taken
% from \href{https://tex.stackexchange.com/a/215571/234654}{TEX.SX} written by \textbf{@egreg}.
%    \begin{macrocode}
\ExplSyntaxOn
%    \end{macrocode}
% \begin{macro}{\storedata}
% Store data listed inside \verb|{}| into an array.
%    \begin{macrocode}
\NewDocumentCommand{\storedata}{mm}
 {
  \bcp_store_data:nn { #1 } { #2 }
 }
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\appenddata}
% Append data to the array.
%    \begin{macrocode}
\NewDocumentCommand{\appenddata}{mm}
 {
  \bcp_append_data:nn { #1 } { #2 }
 }
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\getlength}
% Get the length of the array.
%    \begin{macrocode}
\NewExpandableDocumentCommand{\getdata}{O{1}m}
 {
  \bcp_get_data:nn { #1 } { #2 }
 }
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\removelast}
% Remove the last element from the array.
%    \begin{macrocode}
\NewExpandableDocumentCommand{\getlength}{m}
 {
  \seq_count:c { l_bcp_data_#1_seq }
 }
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\removelast}
% Remove the last element from the array.
%    \begin{macrocode}
\NewDocumentCommand{\removelast}{om}
 {
  \IfNoValueTF { #1 }
   {
    \bcp_remove_last:Nn \l_tmpa_tl { #2 }
   }
   {
    \bcp_remove_last:Nn #1 { #2 }
   }
 }
%    \end{macrocode}
% \end{macro}
% Further implementation of the array interface.
%    \begin{macrocode}
\cs_new_protected:Npn \bcp_store_data:nn #1 #2
 {
  % create the sequence if it doesn't exist or clear it if it exists
  \seq_clear_new:c { l_bcp_data_#1_seq }
  % append the items
  \__bcp_append_data:nn { #1 } { #2 }
 }
\cs_new_protected:Npn \bcp_append_data:nn #1 #2
 {
  % create the sequence if it doesn't exist, do nothing if it exists
  \seq_if_exist:cF { l_bcp_data_#1_seq }
   { \seq_new:c { l_bcp_data_#1_seq } }
  % append the items
  \__bcp_append_data:nn { #1 } { #2 }
 }
\cs_new_protected:Npn \__bcp_append_data:nn #1 #2
 {
  % append items one at a time
  \tl_map_inline:nn { #2 }
   {
    \seq_put_right:cn { l_bcp_data_#1_seq } { ##1 }
   }
 }
\cs_new:Npn \bcp_get_data:nn #1 #2
 {
  % retrieve the requested item
  \seq_item:cn { l_bcp_data_#2_seq } { #1 }
 }
\cs_new_protected:Nn \bcp_remove_last:Nn
 {
  \seq_pop_right:cN { l_bcp_data_#2_seq } #1
 }
\ExplSyntaxOff
%    \end{macrocode}
% \begin{macro}{\hello}
% This is the function to display ``Hello world!"
%    \begin{macrocode}
\newcommand{\hello}{Hello world!}
%    \end{macrocode}
% \end{macro}
\endinput
